{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build",
      "type": "shell",
      "detail": "build container for deployement from current directory",
      "command": "sam validate -t template.yaml;  sam build --use-container --template template.yaml;" ,
      "icon": {"id": "light-bulb","color": "terminal.ansiWhite"}

    },
    {
      "label": "Deploy DEV",
      "type": "shell",
      "detail": "deploy current container to DEV stage.",
      "command": "export AWS_PROFILE=471685057907_PA_DEVELOPER; sam deploy --config-env dev",
      "icon": {"id": "light-bulb","color": "terminal.ansiGreen"}

    },
    {
      "label": "Deploy INT",
      "type": "shell",
      "detail": "deploy current container to INT stage.",
      "command": "export AWS_PROFILE=596480830369_PA_DEVELOPER; sam deploy --config-env int",
      "icon": {"id": "light-bulb","color": "terminal.ansiMagenta"}

    },
    {
      "label": "Deploy PROD",
      "type": "shell",
      "detail": "deploy current container to PROD stage.",
      "command": "export AWS_PROFILE=936022423514_PA_FULLADMIN; sam deploy --config-env prod",
      "icon": {"id": "light-bulb","color": "terminal.ansiRed"}

    },

    {
      "label": "Build & Deploy INT",
      "type": "shell",
      "detail": "build and deploy to first test environment",
      "dependsOn":["Build","Deploy INT"],
      "dependsOrder": "sequence",
      "icon": {"id": "circle-large-filled","color": "terminal.ansiMagenta"}
    },
    {
      "label": "Build & Deploy DEV",
      "type": "shell",
      "dependsOn":["Build","Deploy DEV"],
      "dependsOrder": "sequence",
      "detail": "build and deploy to DEV environment",
      "icon": {"id": "circle-large-filled","color": "terminal.ansiYellow"}
    },

    {
      "label": "Configure VW Profile",
      "type": "shell",
      "command": "aws configure set aws_access_key_id --profile VW ${input:access_id};aws configure set aws_secret_access_key --profile VW ${input:access_key};aws configure set aws_session_token --profile VW ${input:session_token}"
    },
    {
      "label": "set profile",
      "type": "shell",
      "command": "export AWS_PROFILE=471685057907_PA_DEVELOPER echo $AWS_PROFILE"
    },
    {
      "label": "start Docker",
      "type": "shell",
      "command": "sudo service docker start",
      "presentation": {
        "reveal": "silent",
        "close": true
      }
    },
    {
      "label": "start POSTGresql",
      "type": "shell",
      "command": "sudo service postgresql start ; sudo -u postgres psql;",
      "presentation": {
        "reveal": "always",
        "close": false,
        "revealProblems": "never",
      },
    },
    {
      "label": "Deploy Proxy DEV",
      "command":["sam build --template outbound_proxy/proxy-paas-provision-proxy.yml;",
                  "export AWS_PROFILE=471685057907_PA_DEVELOPER ;sam deploy --config-file outbound_proxy/samconfig.toml"],
      "type": "shell"
    },
    {
      "label": "Deploy Proxy 2 DEV",
      "command":["sam build --template outbound_proxy/proxy-paas-connect-to-vpc.yml;",
                  "export AWS_PROFILE=471685057907_PA_DEVELOPER ;sam deploy --config-file outbound_proxy/samconfig.toml --config-env connectDEV"],
      "type": "shell"
    },

    {
      "label": "Deploy Proxy 3 Lambda DEV",
      "command":["sam build --template outbound_proxy/proxy-paas-lambda-example.yml;",
                  "export AWS_PROFILE=471685057907_PA_DEVELOPER ; sam deploy --config-file outbound_proxy/samconfig.toml --config-env lambdaDEV;",
                  "aws lambda update-function-code --function-name proxy-paas-lambda-example --zip-file fileb://outbound_proxy/proxy-paas-lambda-example.zip"],
      "type": "shell"
    },

    {"label": "Build&Deploy Proxy",
      "dependsOn":["Deploy Proxy DEV","Deploy Proxy 2 DEV","Deploy Proxy 3 Lambda DEV"],
      "dependsOrder": "sequence",
      "icon": {"id": "x","color": "terminal.ansiYellow"}
    },



  ],
  "inputs": [
    {
      "type": "promptString",
      "id": "access_id",
      "description": "AWS Access Key ID.",
      "default": ""
    },
    {
      "type": "promptString",
      "id": "access_key",
      "description": "AWS Secret Access Key",
      "default": ""
    },
    {
      "type": "promptString",
      "id": "session_token",
      "description": "AWS Secret Session Token",
      "default": ""
    },
    {"type": "promptString",
    "id": "profile",
    "description": "AWS profile to use ",
    "default": "VW"
},{
  "type": "promptString",
    "id": "stage",
    "description": "development stage",
    "default": ""

}
  ]
}
